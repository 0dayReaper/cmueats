"use strict";function getEateryTagline(e,t,a){var r=new Date(e),n=r.getDay()===a.day,i=apiFmtToInt(dateToAPIFmt(r))>apiFmtToInt(a);(!n||n&&i)&&r.setDate(r.getDate()+(a.day-1-r.getDay()+7)%7+1),r.setHours(a.hour),r.setMinutes(a.min),r.setSeconds(0),r.setMilliseconds(0);var s=moment(r),o=t?"Closes in ":"Opens in ";return o+=s.fromNow().charAt(0).toLowerCase()+s.fromNow().slice(1),o+=" ("+s.calendar()+")"}var dateToAPIFmt=function(e){var t=new Date(e);return{day:t.getDay(),hour:t.getHours(),min:t.getMinutes()}},apiFmtToInt=function(e){return 1e4*e.day+100*e.hour+e.min},apiFmtCompare=function(e,t){var a=apiFmtToInt(e),r=apiFmtToInt(t);return a-r},genEateryMetadata=function(e,t){for(var a=e.times,r=apiFmtToInt(dateToAPIFmt(t)),n=!1,i=0,s=0;s<a.length;++s){var o=a[s],m=apiFmtToInt(o.start),c=apiFmtToInt(o.end);if(r>=m&&c>r){n=!0,i=s;break}if(m>r){i=s;break}}return{isOpen:n,nextTime:n?a[i].end:a[i].start}},Eatery=React.createClass({displayName:"Eatery",render:function(){var e,t=getEateryTagline(this.props.time,this.props.eatery.isOpen,this.props.eatery.nextTime);return e=this.props.eatery.isOpen?"open_eatery":"closed_eatery",React.createElement("div",{className:e},React.createElement("h2",null,this.props.eatery.name),React.createElement("p",null,this.props.eatery.location),React.createElement("p",null,t))}}),EateryList=React.createClass({displayName:"EateryList",render:function(){var e=this.props.eateryList.map(function(e){return React.createElement(Eatery,{key:e.name,eatery:e,time:this.props.time})}.bind(this));return React.createElement("div",{className:"eateryList"},e)}}),EateryContainer=React.createClass({displayName:"EateryContainer",getInitialState:function(){return{eateries:[],currentTime:new Date(Date.now()).toJSON()}},reloadFromServer:function(){$.getJSON(this.props.url,function(e){this.setState({eateries:e.locations,currentTime:new Date(Date.now()).toJSON()})}.bind(this))},reloadUI:function(){this.setState({eateries:this.state.eateries,currentTime:new Date(Date.now()).toJSON()})},componentDidMount:function(){var e=5e3,t=25e4;this.reloadFromServer(),setInterval(this.reloadUI,e),setInterval(this.reloadFromServer,t)},render:function(){var e=this.state.eateries.map(function(e){var t=genEateryMetadata(e,this.state.currentTime);return e.isOpen=t.isOpen,e.nextTime=t.nextTime,e}.bind(this)),t=e.filter(function(e){return e.isOpen}).sort(function(e,t){return apiFmtCompare(e.nextTime,t.nextTime)}),a=e.filter(function(e){return!e.isOpen}).sort(function(e,t){return apiFmtCompare(e.nextTime,t.nextTime)});return React.createElement("div",{className:"eateryContainer"},React.createElement(EateryList,{eateryList:t,time:this.state.currentTime}),React.createElement(EateryList,{eateryList:a,time:this.state.currentTime}))}});ReactDOM.render(React.createElement(EateryContainer,{url:"http://apis.scottylabs.org/dining/v1/locations"}),document.getElementById("content"));